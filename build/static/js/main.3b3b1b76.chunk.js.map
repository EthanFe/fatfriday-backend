{"version":3,"sources":["utility.js","components/NewEventInput.js","components/Message.js","components/Chatroom.js","components/UserDisplay.js","components/VoteCount.js","components/PlaceMarker.js","components/PlacesList.js","components/EventDisplay.js","components/EventsList.js","components/LoginArea.js","components/MainView.js","components/SocketController.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","today","date","Date","setHours","setMinutes","setSeconds","index","array","key","reduce","object","element","Object","group","Array","push","NewEventInput","react_default","a","createElement","className","type","placeholder","value","this","props","newEventName","onChange","newEventNameChanged","entry_default","newEventDateChanged","newEventDate","onClick","createNewEvent","Component","Message","_this","message","id","viewingAsMessageAuthor","editing","currentlyEditingMessageChanged","deleteMessage","created_on","toLocaleTimeString","hour","minute","toLocaleString","currentlyEditingMessage","currentlyEditingMessageContent","currentlyEditingMessageContentChanged","event","editMessage","username","message_body","PureComponent","Chatroom","scrollToBottom","messageList","refs","maxScrollTop","scrollHeight","clientHeight","anime","targets","eventID","easing","direction","duration","autoplay","scrollTop","restart","loggedInAs","user_id","prevProps","messages","length","_this2","sortedMessages","sort","message1","message2","getTime","ref","map","Message_Message","users","name","viewingAsMember","currentlyTypingMessage","currentlyTypingMessageChanged","sendMessage","UserDisplay","votedOnMousedOver","online","VoteCount","componentDidMount","positiveAnimation","color","background","negativeAnimation","componentDidUpdate","votes","PlaceMarker","$hover","place","placeData","PlacesList","votedFor","undefined","find","sortedPlaces","placeSuggestions","place1","place2","react_flip_move_es","entryClassName","concat","google_place_id","onMouseOver","placeMousedOver","event_id","onMouseOut","VoteCount_VoteCount","placeClickedOn","style","height","width","lib_default","bootstrapURLKeys","process","defaultCenter","lat","lng","defaultZoom","PlaceMarker_PlaceMarker","location","latitude","longitude","EventDisplay","dropDownStyle","borderRadius","boxShadow","padding","fontSize","position","overflow","maxHeight","z-index","doesNameContainInput","input","toLowerCase","indexOf","inviteAcceptedUsers","invite","viewingAsCreator","data","created_by","invitableUsersById","invitableUsers","invites","filter","accepted","invitePendingUsers","usersExcludingSelf","user","usersWhoVotedForMousedOver","mousedOverSuggestion","vote","active","eventClickedOn","UserDisplay_UserDisplay","includes","onlineUsers","removeEvent","event_date","eventOwned","Autocomplete_default","getItemValue","item","items","renderItem","isHighlighted","invitingUserText","invitingUserTextChanged","target","onSelect","inviteUser","shouldItemRender","menuStyle","acceptInvitation","placeName","placeSearchAutocompletes","placeSearchText","placeSearchTextChanged","suggestPlace","placeID","PlacesList_PlacesList","Chatroom_Chatroom","EventsList","invitesByEvent","placeSuggestionsByEvent","messagesByEvent","sortedEvents","events","event1","event2","EventDisplay_EventDisplay","activeEvent","mousedOverSuggestionIDs","suggestion","LoginArea","loginUsername","loginUsernameChanged","loginPassword","loginPasswordChanged","loginButtonPressed","newUsername","newUsernameChanged","newPassword","newPasswordChanged","createNewUser","logoutButtonPressed","MainView","LoginArea_LoginArea","NewEventInput_NewEventInput","data-tip","EventsList_EventsList","SocketController","state","mousedOverSuggestionID","setupSocket","socket","require","on","setInitialData","updateEventList","updateInvitableUsersList","loginSuccess","updateInvitesList","setPlaceSearchAutocompletes","updatePlaceSuggestions","updateMessages","updateOnlineUsers","emit","token","setState","earliestEvent","text","userID","invitee_user_id","_ref","onlineUserIDs","preventDefault","password","_ref2","autoCompleteBuildupTimer","clearTimeout","setTimeout","places","place_id","place_name","alreadyVoted","setVoteTo","suggestionIDs","message_id","new_message","MainView_MainView","App","SocketController_SocketController","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b3b1b76.chunk.js","sourcesContent":["const today = () => {\n  const date = new Date()\n  date.setHours(0);\n  date.setMinutes(0);\n  date.setSeconds(0);\n  return date;\n}\n\nconst index = (array, key) => {\n  return array.reduce( (object, element) => {\n    object[element[key]] = element\n    return object\n    // eslint-disable-next-line\n  }, new Object)\n}\n\nconst group = (array, key) => {\n  return array.reduce( (object, element) => {\n    // eslint-disable-next-line\n    object[element[key]] = object[element[key]] || new Array\n    object[element[key]].push(element)\n    return object\n    // eslint-disable-next-line\n  }, new Object)\n}\n\nmodule.exports = {today, index, group}","import React, { Component } from 'react';\nimport DateTimePicker from 'react-datetime-picker';\n\nexport default class NewEventInput extends Component {\n  render() {\n    return (\n      <div className=\"new-event-input\">\n        <div>\n          <input type=\"text\" placeholder=\"Event Name\" value={this.props.newEventName} onChange={this.props.newEventNameChanged}/>\n          <DateTimePicker onChange={this.props.newEventDateChanged} value={this.props.newEventDate}/>\n        </div>\n        <button onClick={this.props.createNewEvent}>Create New Event</button>\n      </div>\n    )\n  }\n}","import React, { PureComponent } from 'react';\n\nexport default class Message extends PureComponent {\n  render() {\n    return (\n      <div className=\"event-display-messages-message-container\" key={this.props.message.id}>\n        <div className=\"event-display-messages-message-upper\">\n          {this.props.viewingAsMessageAuthor && !this.props.editing ? (\n            <div className=\"event-display-messages-message-editdelete-buttons\">\n              <div className=\"event-display-messages-message-edit-button\" onClick={() => this.props.currentlyEditingMessageChanged(this.props.message.id)}>Edit</div>\n              <div className=\"event-display-messages-message-delete-button\" onClick={() => this.props.deleteMessage(this.props.message.id)}>Delete</div>\n            </div>\n          ) : null}\n          <div className=\"event-display-messages-message-timestamps\">\n            <div className=\"event-display-messages-message-timestamp basic-timestamp\">{new Date(this.props.message.created_on).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</div>\n            <div className=\"event-display-messages-message-timestamp full-timestamp\">{new Date(this.props.message.created_on).toLocaleString()}</div>\n          </div>\n        </div>\n        {this.props.currentlyEditingMessage === this.props.message.id ? (\n          <div>\n            <input type=\"text\" placeholder=\"Message\" value={this.props.currentlyEditingMessageContent} onChange={this.props.currentlyEditingMessageContentChanged}/>\n            <span><button onClick={event => this.props.editMessage(event, this.props.message.id)}>Edit</button></span>\n          </div>\n        ) : (\n          <div className=\"event-display-messages-message\">\n            <div className=\"event-display-messages-message-username\">{this.props.username}: </div>\n            <div className=\"event-display-messages-message-text\">{this.props.message.message_body}</div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport anime from 'animejs'\nimport Message from './Message';\n\nexport default class Chatroom extends Component {\n  componentDidUpdate(prevProps) {\n    if (prevProps.messages.length !== this.props.messages.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    const sortedMessages = this.props.messages.sort((message1, message2) => new Date(message1.created_on).getTime() - new Date(message2.created_on).getTime())\n    return (\n      <div className=\"event-display-messages\">\n        <div className=\"event-display-messages-header\">Chat</div>\n        <div className={\"event-display-messages-list event-id-\" + this.props.eventID} ref=\"messageList\">\n          {sortedMessages.map(message => {\n            const editing = this.props.currentlyEditingMessage === message.id\n            return <Message\n              message={message}\n              editing={editing}\n              currentlyEditingMessage={this.props.currentlyEditingMessage}\n              currentlyEditingMessageContent={this.props.currentlyEditingMessageContent}\n              currentlyEditingMessageChanged={this.props.currentlyEditingMessageChanged}\n              currentlyEditingMessageContentChanged={this.props.currentlyEditingMessageContentChanged}\n              editMessage={this.props.editMessage}\n              deleteMessage={this.props.deleteMessage}\n              username={this.props.users[message.user_id].name}\n              viewingAsMessageAuthor={this.viewingAsMessageAuthor(message)}\n            />\n          })}\n        </div>\n        {this.props.viewingAsMember ? (\n          <div className=\"event-display-messages-text-entry\">\n            <form>\n              <input type=\"text\" placeholder=\"Message\" value={this.props.currentlyTypingMessage} onChange={this.props.currentlyTypingMessageChanged}/>\n              <div><button onClick={event => this.props.sendMessage(event, this.props.eventID)}>Send</button></div>\n            </form>\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n\n  scrollToBottom = () => {\n    const { messageList } = this.refs;\n    const scrollHeight = messageList.scrollHeight;\n    const height = messageList.clientHeight;\n    const maxScrollTop = scrollHeight - height;\n    anime({\n      targets: '.event-display-messages-list.event-id-' + this.props.eventID,\n      easing: 'easeOutQuart',\n      direction: 'normal',\n      duration: 350,\n      autoplay: false,\n      scrollTop: maxScrollTop > 0 ? maxScrollTop : 0\n    }).restart()\n  }\n\n  viewingAsMessageAuthor = (message) => {\n    return this.props.loggedInAs && this.props.loggedInAs.id === message.user_id\n  }\n}","import React, { Component } from 'react';\n\nexport default class UserDisplay extends Component {\n  render() {\n    return (\n      <div className=\"user-display\">\n        <span className={\"user-display-name\" + (this.props.votedOnMousedOver ? \" voted-user\" : \"\")}>{this.props.name}</span>\n        {this.props.online ? <div className=\"online-indicator\"></div> : null}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport anime from 'animejs'\n\nexport default class VoteCount extends Component {\n  componentDidMount = () => {\n    this.positiveAnimation = anime({\n      targets: '.vote-count.' + this.props.id,\n      color: \"#ffffff\",\n      easing: 'easeOutQuart',\n      direction: 'alternate',\n      duration: 350,\n      background: \"#00B258\"\n    });\n    this.negativeAnimation = anime({\n      targets: '.vote-count.' + this.props.id,\n      color: \"#ffffff\",\n      easing: 'easeOutQuart',\n      direction: 'alternate',\n      duration: 350,\n      background: \"#B30300\"\n    });\n  }\n  \n  componentDidUpdate = (prevProps) => {\n    if (prevProps.votes < this.props.votes) {\n      this.positiveAnimation.restart()\n    } else if (prevProps.votes > this.props.votes) {\n      this.negativeAnimation.restart()\n    }\n  }\n\n  render() {\n    return <div className={\"vote-count \" + this.props.id}>{this.props.votes}</div>\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class PlaceMarker extends Component {\n  render() {\n    return (\n      <div className={\"place-map-marker\" + (this.props.$hover ? \" map-marker-hovered\" : \"\")}>\n        {this.props.$hover ? this.props.place.placeData.name : null}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport VoteCount from './VoteCount.js';\nimport FlipMove from 'react-flip-move';\nimport GoogleMapReact from 'google-map-react';\nimport PlaceMarker from './PlaceMarker';\n\nexport default class PlacesList extends Component {\n  render() {\n    const latitude = 29.747055\n    const longitude = -95.372617\n    const sortedPlaces = this.props.placeSuggestions.sort((place1, place2) => place2.votes.length - place1.votes.length)\n    return (\n      <div>\n        <div className=\"event-display-place-list\">\n          <FlipMove>\n            {sortedPlaces.map(place => {\n              const votedFor = this.votedFor(place)\n              const entryClassName = \"event-display-place-list-entry\" + (votedFor ? \" voted-for\" : \"\")\n              const id = `${place.google_place_id}${this.props.eventID}`\n              return (\n                <div className=\"event-display-place-list-entry-container\"\n                    key={id}\n                    onMouseOver={() => this.props.placeMousedOver({event_id: this.props.eventID, google_place_id: place.google_place_id})}\n                    onMouseOut={() => this.props.placeMousedOver(null)}>\n                  <VoteCount votes={place.votes.length} id={id}/>\n                  {this.props.viewingAsMember ? (\n                    <div className={`${entryClassName} clickable`}\n                        onClick={() => this.props.placeClickedOn(place.google_place_id, this.props.eventID, votedFor)}>\n                      {place.placeData.name} \n                    </div>\n                  ) : (\n                    <div className={`${entryClassName}`}>\n                      {place.placeData.name} \n                    </div>\n                  )}\n                </div>\n              )\n            })}\n          </FlipMove>\n        </div>\n        <div className=\"map-wrapper\" style={{ height: '300px', width: '300px' }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY }}\n            defaultCenter={{\n              lat: latitude,\n              lng: longitude\n            }}\n            defaultZoom={11}\n          >\n            {this.props.placeSuggestions.map(place => <PlaceMarker lat={place.placeData.location.latitude} lng={place.placeData.location.longitude} place={place}/>)}\n          </GoogleMapReact>\n        </div>\n      </div>\n    )\n  }\n\n  votedFor = (place) => {\n    return this.props.loggedInAs && place.votes.find(place => place.user_id === this.props.loggedInAs.id) !== undefined\n  }\n}","import React, { Component } from 'react';\nimport Autocomplete from 'react-autocomplete'\nimport {index} from \"../utility.js\"\nimport Chatroom from './Chatroom.js';\nimport UserDisplay from './UserDisplay.js';\nimport PlacesList from './PlacesList.js';\n\nexport default class EventDisplay extends Component {\n  dropDownStyle = {\n    borderRadius: '3px',\n    boxShadow: '0 2px 12px rgba(0, 0, 0, 0.1)',\n    background: 'rgba(255, 255, 255, 0.9)',\n    padding: '2px 0',\n    fontSize: '90%',\n    position: 'fixed',\n    overflow: 'auto',\n    maxHeight: '50%',\n    \"z-index\": \"1\"\n  }\n  \n  render() {\n    const invitableUsersById = index(this.props.invitableUsers, \"id\")\n\n    let inviteAcceptedUsers = this.props.invites.filter(invite => invite.accepted)\n    // also display event owner as a member of event\n    inviteAcceptedUsers.push({user_id: this.props.data.created_by})\n    inviteAcceptedUsers = inviteAcceptedUsers.map(invite => invitableUsersById[invite.user_id])\n\n    const invitePendingUsers = this.props.invites.filter(invite => !invite.accepted).map(invite => invitableUsersById[invite.user_id])\n    const viewingAsMember = this.viewingAsMember(inviteAcceptedUsers)\n\n    const usersExcludingSelf = this.props.invitableUsers.filter(user => !this.props.loggedInAs || user.id !== this.props.loggedInAs.id)\n\n    const usersWhoVotedForMousedOver = (this.props.mousedOverSuggestion && this.props.mousedOverSuggestion.votes.map(vote => vote.user_id)) || []\n    return (\n      <div className={\"event-display\" + (this.props.active ? \" active-event\" : \" inactive-event\")} onClick={() => this.props.eventClickedOn(this.props.data.id)}>\n        <div className=\"event-display-left-column\">\n          <div className=\"event-display-main\">\n            <div className=\"event-display-members\">\n              <div className=\"invited-users-list\">\n                <div>Users going:</div>\n                {inviteAcceptedUsers.map(user => <UserDisplay key={user.id} votedOnMousedOver={usersWhoVotedForMousedOver.includes(user.id)} name={user.name} online={this.props.onlineUsers.includes(user.id)}/> )}\n              </div>\n            </div>\n            <div className=\"event-display-title\">\n              <span className=\"event-name\">\n                {this.props.data.name}\n                {this.viewingAsCreator() ? <span className=\"delete-event-button\" onClick={() => this.props.removeEvent(this.props.data.id)}> (Delete)</span> : null}\n              </span>\n              <span className=\"event-date\">{new Date(this.props.data.event_date).toLocaleString()}</span>\n              {this.props.eventOwned && this.props.active ? (\n                <div className=\"invite-user-field\">\n                  <div className=\"invite-user-label\">Invite to Event</div>\n                  <Autocomplete\n                    getItemValue={(item) => item.name}\n                    items={usersExcludingSelf}\n                    renderItem={(item, isHighlighted) =>\n                      <div style={{\n                        background: isHighlighted ? 'lightgray' : 'white',\n                        color: this.props.invites.find(invite => invite.user_id === item.id) !== undefined ? '#67960f80' : 'black'\n                      }}>\n                        {item.name}\n                      </div>\n                    }\n                    value={this.props.invitingUserText}\n                    onChange={(event) => this.props.invitingUserTextChanged(event.target.value)}\n                    onSelect={(value, item) => this.props.inviteUser(item.id, this.props.data.id)}\n                    shouldItemRender={(user, input) => this.doesNameContainInput(user.name, input)}\n                    menuStyle={this.dropDownStyle}\n                  />\n                </div>\n              ) : null}\n            </div>\n            <div className=\"event-display-members\">\n              <div className=\"invited-users-list\">\n                <div>Users already invited:</div>\n                {invitePendingUsers.map(user => <div key={user.id}>{user.name}</div> )}\n              </div>\n              {this.props.loggedInAs && invitePendingUsers.find(invite => {\n                return invite.id === this.props.loggedInAs.id\n                }) !== undefined ? (\n                <div className=\"join-event\">\n                  <button className=\"join-event-button\" onClick={() => this.props.acceptInvitation(this.props.data.id)}>Join Event</button>\n                </div>\n              ) : null}\n            </div>\n          </div>\n          {this.props.active ? (\n            <div>\n              {viewingAsMember ? (\n                <div className=\"event-display-place-suggestion\">\n                  <div className=\"invite-user-label\">Suggest a Place</div>\n                  <Autocomplete\n                    getItemValue={(item) => item.placeName}\n                    items={this.props.placeSearchAutocompletes}\n                    renderItem={(item, isHighlighted) =>\n                      <div style={{background: isHighlighted ? 'lightgray' : 'white'}}>\n                        {item.placeName}\n                      </div>\n                    }\n                    value={this.props.placeSearchText}\n                    onChange={(event) => this.props.placeSearchTextChanged(event.target.value)}\n                    onSelect={(value, item) => this.props.suggestPlace(item.placeID, item.placeName, this.props.data.id)}\n                    shouldItemRender={(place, input) => this.doesNameContainInput(place.placeName, input)}\n                    menuStyle={this.dropDownStyle}\n                  />\n                </div>\n              ) : null}\n              <PlacesList placeSuggestions={this.props.placeSuggestions}\n                          loggedInAs={this.props.loggedInAs}\n                          eventID={this.props.data.id}\n                          placeMousedOver={this.props.placeMousedOver}\n                          placeClickedOn={this.props.placeClickedOn}\n                          viewingAsMember={viewingAsMember}/>\n            </div>\n          ) : null}\n        </div>\n        <div className=\"event-display-right-column\">\n          <Chatroom\n            eventID={this.props.data.id}\n            messages={this.props.messages}\n            currentlyTypingMessage={this.props.currentlyTypingMessage}\n            currentlyTypingMessageChanged={this.props.currentlyTypingMessageChanged}\n            users={index(inviteAcceptedUsers, \"id\")}\n            viewingAsMember={viewingAsMember}\n            currentlyEditingMessage={this.props.currentlyEditingMessage}\n            currentlyEditingMessageContent={this.props.currentlyEditingMessageContent}\n            currentlyEditingMessageChanged={this.props.currentlyEditingMessageChanged}\n            currentlyEditingMessageContentChanged={this.props.currentlyEditingMessageContentChanged}\n            sendMessage={this.props.sendMessage}\n            editMessage={this.props.editMessage}\n            deleteMessage={this.props.deleteMessage}\n            loggedInAs={this.props.loggedInAs}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  doesNameContainInput = (name, input) => {\n    return name.toLowerCase().indexOf(input.toLowerCase()) !== -1\n  }\n\n  viewingAsMember = (inviteAcceptedUsers) => {\n    return this.props.loggedInAs && (inviteAcceptedUsers.find(invite => \n      invite.id === this.props.loggedInAs.id\n    ) !== undefined)\n  }\n\n  viewingAsCreator = () => {\n    return this.props.loggedInAs && this.props.loggedInAs.id === this.props.data.created_by\n  }\n}\n","import React, { Component } from 'react';\nimport EventDisplay from './EventDisplay';\nimport {group} from '../utility.js'\n\nexport default class EventsList extends Component {\n  render() {\n    const invitesByEvent = group(this.props.invites, \"event_id\")\n    const placeSuggestionsByEvent = group(this.props.placeSuggestions, \"event_id\")\n    const messagesByEvent = group(this.props.messages, \"event_id\")\n    const sortedEvents = this.props.events.sort((event1, event2) => new Date(event1.event_date).getTime() - new Date(event2.event_date).getTime())\n    return (\n      <div className=\"events-list\">\n        {sortedEvents.map(event => <EventDisplay data={event}\n                                                  active={this.props.activeEvent === event.id}\n                                                  key={event.id}\n                                                  invitableUsers={this.props.invitableUsers}\n                                                  invitingUserText={this.props.invitingUserText}\n                                                  invitingUserTextChanged={this.props.invitingUserTextChanged}\n                                                  inviteUser={this.props.inviteUser}\n                                                  invites={invitesByEvent[event.id] || []}\n                                                  loggedInAs={this.props.loggedInAs}\n                                                  eventOwned={this.props.loggedInAs && this.props.loggedInAs.id === event.created_by}\n                                                  acceptInvitation={this.props.acceptInvitation}\n                                                  placeSearchText={this.props.placeSearchText}\n                                                  placeSearchTextChanged={this.props.placeSearchTextChanged}\n                                                  placeSearchAutocompletes={this.props.placeSearchAutocompletes}\n                                                  suggestPlace={this.props.suggestPlace}\n                                                  placeSuggestions={placeSuggestionsByEvent[event.id] || []}\n                                                  placeClickedOn={this.props.placeClickedOn}\n                                                  placeMousedOver={this.props.placeMousedOver}\n                                                  mousedOverSuggestion={this.props.mousedOverSuggestionIDs && (placeSuggestionsByEvent[event.id] || []).find(suggestion =>\n                                                    suggestion.event_id === this.props.mousedOverSuggestionIDs.event_id &&\n                                                    suggestion.google_place_id === this.props.mousedOverSuggestionIDs.google_place_id\n                                                    )}\n                                                  removeEvent={this.props.removeEvent}\n                                                  messages={messagesByEvent[event.id] || []}\n                                                  currentlyTypingMessage={this.props.currentlyTypingMessage}\n                                                  currentlyTypingMessageChanged={this.props.currentlyTypingMessageChanged}\n                                                  onlineUsers={this.props.onlineUsers}\n                                                  eventClickedOn={this.props.eventClickedOn}\n                                                  currentlyEditingMessage={this.props.currentlyEditingMessage}\n                                                  currentlyEditingMessageContent={this.props.currentlyEditingMessageContent}\n                                                  currentlyEditingMessageChanged={this.props.currentlyEditingMessageChanged}\n                                                  currentlyEditingMessageContentChanged={this.props.currentlyEditingMessageContentChanged}\n                                                  sendMessage={this.props.sendMessage}\n                                                  editMessage={this.props.editMessage}\n                                                  deleteMessage={this.props.deleteMessage}\n                                                  />)}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\n\nexport default class LoginArea extends Component {\n  render() {\n    return this.props.loggedInAs === null ? (\n      <div className=\"login-area\">\n        <form>\n          <input type=\"text\" placeholder=\"Username\" value={this.props.loginUsername} onChange={this.props.loginUsernameChanged}/>\n          <input type=\"password\" placeholder=\"Password\" value={this.props.loginPassword} onChange={this.props.loginPasswordChanged}/>\n          <div><button onClick={this.props.loginButtonPressed}>Login</button></div>\n        </form>\n        <form>\n          <input type=\"text\" placeholder=\"Username\" value={this.props.newUsername} onChange={this.props.newUsernameChanged}/>\n          <input type=\"password\" placeholder=\"Password\" value={this.props.newPassword} onChange={this.props.newPasswordChanged}/>\n          <div><button onClick={this.props.createNewUser}>Sign Up</button></div>\n        </form>\n      </div>\n    ) : (\n      <div className=\"login-area\">\n        <div className=\"logged-in-text\">Logged in as {this.props.loggedInAs}</div>\n        <div><button onClick={this.props.logoutButtonPressed}>Logout</button></div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport NewEventInput from './NewEventInput';\nimport EventsList from './EventsList';\nimport './styles.css';\nimport LoginArea from './LoginArea';\n\nexport default class MainView extends Component {\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main-view\">\n          <div className=\"login-and-events-wrapper\">\n            <h2>Events!</h2>\n            <div className=\"top-bar\">\n              <div className=\"login-wrapper\">\n                <LoginArea \n                  loginUsername={this.props.loginUsername}\n                  loginPassword={this.props.loginPassword}\n                  loginUsernameChanged={this.props.loginUsernameChanged}\n                  loginPasswordChanged={this.props.loginPasswordChanged}\n                  loginButtonPressed={this.props.loginButtonPressed}\n\n                  newUsername={this.props.newUsername}\n                  newPassword={this.props.newPassword}\n                  newUsernameChanged={this.props.newUsernameChanged}\n                  newPasswordChanged={this.props.newPasswordChanged}\n                  createNewUser={this.props.createNewUser}\n                  \n                  loggedInAs={this.props.loggedInAs ? this.props.loggedInAs.name : null}\n                  logoutButtonPressed={this.props.logoutButtonPressed}\n                />\n              </div>\n              {this.props.loggedInAs !== null ? <NewEventInput newEventName={this.props.newEventName}\n                            newEventDate={this.props.newEventDate}\n                            newEventNameChanged={this.props.newEventNameChanged}\n                            createNewEvent={this.props.createNewEvent}\n                            newEventDateChanged={this.props.newEventDateChanged}/> : null}\n            </div>\n            <div className=\"events-list-wrapper\" data-tip=\"whee\">\n              <EventsList events={this.props.events}\n                          activeEvent={this.props.activeEvent}\n                          invitableUsers={this.props.invitableUsers}\n                          invitingUserText={this.props.invitingUserText}\n                          invitingUserTextChanged={this.props.invitingUserTextChanged}\n                          inviteUser={this.props.inviteUser}\n                          invites={this.props.invites}\n                          loggedInAs={this.props.loggedInAs}\n                          acceptInvitation={this.props.acceptInvitation}\n                          placeSearchText={this.props.placeSearchText}\n                          placeSearchTextChanged={this.props.placeSearchTextChanged}\n                          placeSearchAutocompletes={this.props.placeSearchAutocompletes}\n                          suggestPlace={this.props.suggestPlace}\n                          placeSuggestions={this.props.placeSuggestions}\n                          placeClickedOn={this.props.placeClickedOn}\n                          placeMousedOver={this.props.placeMousedOver}\n                          mousedOverSuggestionIDs={this.props.mousedOverSuggestionIDs}\n                          removeEvent={this.props.removeEvent}\n                          onlineUsers={this.props.onlineUsers}\n                          eventClickedOn={this.props.eventClickedOn}\n                          messages={this.props.messages}\n                          currentlyTypingMessage={this.props.currentlyTypingMessage}\n                          currentlyTypingMessageChanged={this.props.currentlyTypingMessageChanged}\n                          currentlyEditingMessage={this.props.currentlyEditingMessage}\n                          currentlyEditingMessageContent={this.props.currentlyEditingMessageContent}\n                          currentlyEditingMessageChanged={this.props.currentlyEditingMessageChanged}\n                          currentlyEditingMessageContentChanged={this.props.currentlyEditingMessageContentChanged}\n                          sendMessage={this.props.sendMessage}\n                          editMessage={this.props.editMessage}\n                          deleteMessage={this.props.deleteMessage}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport MainView from './MainView';\nimport {today} from '../utility.js'\n\nexport default class SocketController extends Component {\n  state = {\n    events: [],\n    newEventName: \"\",\n    newEventDate: today(),\n    loginUsername: \"\",\n    loginPassword: \"\",\n    newUsername: \"\",\n    newPassword: \"\",\n    loggedInAs: null,\n    invitableUsers: [],\n    invitingUserText: \"\",\n    invites: [],\n    placeSearchText: \"\",\n    placeSearchAutocompletes: [],\n    placeSuggestions: [],\n    mousedOverSuggestionID: null,\n    messages: [],\n    currentlyTypingMessage: \"\",\n    currentlyEditingMessage: null,\n    currentlyEditingMessageContent: \"\",\n    onlineUsers: [],\n    activeEvent: null\n  }\n\n  componentDidMount = () => {\n    this.setupSocket()\n  }\n\n  setupSocket = () => {\n    // const socket = require('socket.io-client')(\"http://localhost:3000\");\n    const socket = require('socket.io-client')();\n    this.socket = socket\n    socket.on(\"initialData\", this.setInitialData)\n    socket.on(\"eventList\", this.updateEventList)\n    socket.on(\"invitableUsersList\", this.updateInvitableUsersList)\n    socket.on(\"loggedIn\", this.loginSuccess)\n    socket.on(\"invitesList\", this.updateInvitesList)\n    socket.on(\"placeNameMatches\", this.setPlaceSearchAutocompletes)\n    socket.on(\"placeSuggestions\", this.updatePlaceSuggestions)\n    socket.on(\"messages\", this.updateMessages)\n    socket.on(\"onlineUsers\", this.updateOnlineUsers)\n  }\n\n  createNewEvent = () => {\n    this.socket.emit(\"createNewEvent\", {\n      token: this.state.loggedInAs.token,\n      name: this.state.newEventName,\n      user_id: this.state.loggedInAs.id,\n      date: this.state.newEventDate.getTime()\n    })\n    this.setState({newEventName: \"\", newEventDate: today()})\n  }\n\n  newEventNameChanged = (event) => {\n    this.setState({newEventName: event.target.value})\n  }\n\n  newEventDateChanged = (event) => {\n    this.setState({newEventDate: event})\n  }\n\n  updateEventList = (events) => {\n    this.setState({\n      events: events,\n      activeEvent: this.state.activeEvent === null && events.length > 0 ? this.earliestEvent(events).id : this.state.activeEvent\n    })\n  }\n\n  updateInvitableUsersList = (users) => {\n    this.setState({invitableUsers: users})\n  }\n\n  updateInvitesList = (invites) => {\n    this.setState({invites: invites})\n  }\n\n  invitingUserTextChanged = (text) => {\n    this.setState({invitingUserText: text})\n  }\n\n  updatePlaceSuggestions = (placeSuggestions) => {\n    this.setState({placeSuggestions: placeSuggestions})\n  }\n\n  updateMessages = (messages) => {\n    this.setState({messages: messages})\n  }\n  \n  updateOnlineUsers = (onlineUsers) => {\n    this.setState({onlineUsers: onlineUsers})\n  }\n  \n  inviteUser = (userID, eventID) => {\n    this.socket.emit(\"inviteUserToEvent\", {\n      token: this.state.loggedInAs.token,\n      user_id: this.state.loggedInAs.id,\n      invitee_user_id: userID,\n      event_id: eventID\n    })\n    this.setState({invitingUserText: \"\"})\n  }\n\n  setInitialData = ({events, users, invites, placeSuggestions, messages, onlineUserIDs}) => {\n    this.setState({\n      events: events,\n      invitableUsers: users,\n      invites: invites,\n      placeSuggestions: placeSuggestions,\n      messages: messages,\n      onlineUsers: onlineUserIDs,\n      activeEvent: events.length > 0 ? this.earliestEvent(events).id : null\n    })\n  }\n\n  loginUsernameChanged = (event) => {\n    this.setState({loginUsername: event.target.value})\n  }\n\n  loginPasswordChanged = (event) => {\n    this.setState({loginPassword: event.target.value})\n  }\n\n  loginButtonPressed = (event) => {\n    event.preventDefault()\n    this.socket.emit(\"login\", {\n      username: this.state.loginUsername,\n      password: this.state.loginPassword\n    })\n    this.setState({newUsername: \"\", newPassword: \"\", loginUsername: \"\", loginPassword: \"\"})\n  }\n\n  newUsernameChanged = (event) => {\n    this.setState({newUsername: event.target.value})\n  }\n\n  newPasswordChanged = (event) => {\n    this.setState({newPassword: event.target.value})\n  }\n\n  createNewUser = (event) => {\n    event.preventDefault()\n    this.socket.emit(\"signUp\", {\n      username: this.state.newUsername,\n      password: this.state.newPassword\n    })\n    this.setState({newUsername: \"\", newPassword: \"\", loginUsername: \"\", loginPassword: \"\"})\n  }\n\n  loginSuccess = ({user}) => {\n    this.setState({loggedInAs: user})\n  }\n\n  logoutButtonPressed = () => {\n    this.socket.emit(\"logout\", {\n      token: this.state.loggedInAs.token,\n      user_id: this.state.loggedInAs.id\n    })\n    this.setState({loggedInAs: null})\n  }\n\n  acceptInvitation = (event_id) => {\n    this.socket.emit(\"acceptInvitation\", {\n      token: this.state.loggedInAs.token,\n      user_id: this.state.loggedInAs.id,\n      event_id: event_id\n    })\n  }\n\n  placeSearchTextChanged = (text) => {\n    const autoCompleteBuildupTime = 250 //ms\n\n    if (this.autoCompleteBuildupTimer !== null) {\n      clearTimeout(this.autoCompleteBuildupTimer)\n      this.autoCompleteBuildupTimer = null\n    }\n    if (text !== \"\") {\n      this.autoCompleteBuildupTimer = setTimeout(() => {\n        this.socket.emit(\"placeTextEntered\", {\n          token: this.state.loggedInAs.token,\n          user_id: this.state.loggedInAs.id,\n          text: text\n        })\n        this.autoCompleteBuildupTimer = null\n      }, autoCompleteBuildupTime)\n    } else {\n      this.setState({placeSearchAutocompletes: []})\n    }\n\n    this.setState({\n      placeSearchText: text\n    })\n  }\n\n  setPlaceSearchAutocompletes = (places) => {\n    this.setState({placeSearchAutocompletes: places})\n  }\n\n  suggestPlace = (placeID, placeName, eventID) => {\n    this.socket.emit(\"suggestPlace\", {\n      token: this.state.loggedInAs.token,\n      user_id: this.state.loggedInAs.id,\n      place_id: placeID,\n      place_name: placeName,\n      event_id: eventID\n    })\n    this.setState({placeSearchText: \"\"})\n  }\n\n  placeClickedOn = (place_id, event_id, alreadyVoted) => {\n    this.socket.emit(\"voteForPlace\", {\n      token: this.state.loggedInAs.token,\n      user_id: this.state.loggedInAs.id,\n      place_id: place_id,\n      event_id: event_id,\n      setVoteTo: !alreadyVoted\n    })\n  }\n\n  placeMousedOver = (suggestionIDs) => {\n    this.setState({mousedOverSuggestionIDs: suggestionIDs})\n  }\n\n  removeEvent = (event_id) => {\n    this.socket.emit(\"removeEvent\", {\n      token: this.state.loggedInAs.token,\n      user_id: this.state.loggedInAs.id,\n      event_id: event_id\n    })\n  }\n\n  currentlyTypingMessageChanged = (event) => {\n    this.setState({currentlyTypingMessage: event.target.value})\n  }\n\n  sendMessage = (event, event_id) => {\n    event.preventDefault()\n    this.socket.emit(\"sendMessage\", {\n      token: this.state.loggedInAs.token,\n      user_id: this.state.loggedInAs.id,\n      event_id: event_id,\n      message: this.state.currentlyTypingMessage\n    })\n    this.setState({currentlyTypingMessage: \"\"})\n  }\n\n  editMessage = (event, message_id) => {\n    event.preventDefault()\n    this.socket.emit(\"editMessage\", {\n      token: this.state.loggedInAs.token,\n      user_id: this.state.loggedInAs.id,\n      message_id: message_id,\n      new_message: this.state.currentlyEditingMessageContent\n    })\n    this.setState({currentlyEditingMessage: null, currentlyEditingMessageContent: \"\"})\n  }\n\n  currentlyEditingMessageChanged = (message_id) => {\n    this.setState({\n      currentlyEditingMessage: message_id,\n      currentlyEditingMessageContent: this.state.messages.find(message => message.id === message_id).message_body\n    })\n  }\n\n  currentlyEditingMessageContentChanged = (event) => {\n    this.setState({currentlyEditingMessageContent: event.target.value})\n  }\n\n  deleteMessage = (message_id) => {\n    this.socket.emit(\"deleteMessage\", {\n      token: this.state.loggedInAs.token,\n      user_id: this.state.loggedInAs.id,\n      message_id: message_id\n    })\n  }\n\n  eventClickedOn = (event_id) => {\n    this.setState({activeEvent: event_id})\n  }\n\n  earliestEvent = (events) => {\n    return events.sort((event1, event2) => new Date(event1.event_date).getTime() - new Date(event2.event_date).getTime())[0]\n  }\n\n  render() {\n    return <MainView\n              newEventName={this.state.newEventName}\n              newEventDate={this.state.newEventDate}\n              createNewEvent={this.createNewEvent}\n              newEventNameChanged={this.newEventNameChanged}\n              newEventDateChanged={this.newEventDateChanged}\n\n              loginUsername={this.state.loginUsername}\n              loginPassword={this.state.loginPassword}\n              loginUsernameChanged={this.loginUsernameChanged}\n              loginPasswordChanged={this.loginPasswordChanged}\n              loginButtonPressed={this.loginButtonPressed}\n              newUsername={this.state.newUsername}\n              newPassword={this.state.newPassword}\n              newUsernameChanged={this.newUsernameChanged}\n              newPasswordChanged={this.newPasswordChanged}\n              createNewUser={this.createNewUser}\n              loggedInAs={this.state.loggedInAs}\n              logoutButtonPressed={this.logoutButtonPressed}\n\n              events={this.state.events}\n              activeEvent={this.state.activeEvent}\n              invitableUsers={this.state.invitableUsers}\n              invitingUserText={this.state.invitingUserText}\n              invitingUserTextChanged={this.invitingUserTextChanged}\n              inviteUser={this.inviteUser}\n              invites={this.state.invites}\n              acceptInvitation={this.acceptInvitation}\n              placeSearchText={this.state.placeSearchText}\n              placeSearchTextChanged={this.placeSearchTextChanged}\n              placeSearchAutocompletes={this.state.placeSearchAutocompletes}\n              suggestPlace={this.suggestPlace}\n              placeSuggestions={this.state.placeSuggestions}\n              placeClickedOn={this.placeClickedOn}\n              placeMousedOver={this.placeMousedOver}\n              mousedOverSuggestionIDs={this.state.mousedOverSuggestionIDs}\n              removeEvent={this.removeEvent}\n              messages={this.state.messages}\n              currentlyTypingMessage={this.state.currentlyTypingMessage}\n              currentlyTypingMessageChanged={this.currentlyTypingMessageChanged}\n              currentlyEditingMessage={this.state.currentlyEditingMessage}\n              currentlyEditingMessageContent={this.state.currentlyEditingMessageContent}\n              currentlyEditingMessageChanged={this.currentlyEditingMessageChanged}\n              currentlyEditingMessageContentChanged={this.currentlyEditingMessageContentChanged}\n              sendMessage={this.sendMessage}\n              editMessage={this.editMessage}\n              deleteMessage={this.deleteMessage}\n              onlineUsers={this.state.onlineUsers}\n              eventClickedOn={this.eventClickedOn}\n            />\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport SocketController from './components/SocketController';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SocketController/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}