{"version":3,"sources":["utility.js","actions.js","components/NewEventInput.js","components/Message.js","components/Chatroom.js","components/VoteCount.js","components/PlaceMarker.js","components/PlacesList.js","components/autocompleteStyle.js","components/InviteUserInput.js","components/UserDisplay.js","components/EventMembersList.js","components/SuggestPlaceInput.js","components/EventDisplay.js","components/EventsList.js","components/LoginArea.js","components/MainView.js","App.js","serviceWorker.js","reducer.js","index.js","socketMiddleware.js"],"names":["module","exports","today","date","Date","setHours","setMinutes","setSeconds","index","array","key","reduce","object","element","Object","group","Array","push","SOCKET_EMIT","CHANGE_LOGIN_USERNAME","CHANGE_LOGIN_PASSWORD","CLEAR_LOGIN_FIELDS","LOGGED_OUT","CHANGE_NEW_EVENT_NAME","CHANGE_NEW_EVENT_DATE","NEW_EVENT_CREATED","CHANGE_INVITING_USER_TEXT","CLEAR_INVITING_USER_TEXT","CHANGE_PLACE_SEARCH_TEXT","CLEAR_PLACE_SEARCH_TEXT","CLEAR_PLACE_SEARCH_AUTOCOMPLETES","MOUSE_OVER_PLACE","CLICK_ON_EVENT","CHANGE_CURRENTLY_TYPING_MESSAGE","CLEAR_CURRENTLY_TYPING_MESSAGE","CHANGE_CURRENTLY_EDITING_MESSAGE","CHANGE_CURRENTLY_EDITING_MESSAGE_CONTENT","CLEAR_CURRENTLY_EDITING_MESSAGE","socketEmit","eventType","socketPayload","type","payload","NewEventInput","createNewEvent","_this","props","loggedInAs","token","id","newEventName","newEventDate","getTime","_this2","this","react_default","a","createElement","className","placeholder","value","onChange","event","changeNewEventName","target","entry_default","changeNewEventDate","onClick","Component","mapActionsToProps","name","user_id","eventName","eventDate","store","dispatch","connect","state","Message","editMessage","message","currentlyEditingMessageContent","deleteMessage","viewingAsMessageAuthor","editing","changeCurrentlyEditingMessage","message_body","created_on","toLocaleTimeString","hour","minute","toLocaleString","changeCurrentlyEditingMessageContent","username","PureComponent","message_id","existingMessage","text","new_message","currentlyEditingMessage","Chatroom","sendMessage","preventDefault","eventID","currentlyTypingMessage","scrollToBottom","messageList","refs","maxScrollTop","scrollHeight","clientHeight","anime","targets","easing","direction","duration","autoplay","scrollTop","restart","prevProps","messages","length","sortedMessages","sort","message1","message2","ref","map","components_Message","users","active","viewingAsMember","changeCurrentlyTypingMessage","event_id","VoteCount","componentDidMount","positiveAnimation","color","background","negativeAnimation","componentDidUpdate","votes","PlaceMarker","$hover","place","placeData","PlacesList","votedFor","undefined","find","sortedPlaces","placeSuggestions","place1","place2","react_flip_move_es","entryClassName","concat","google_place_id","onMouseOver","mouseOverPlace","onMouseOut","VoteCount_VoteCount","clickOnPlace","style","height","width","lib_default","bootstrapURLKeys","process","defaultCenter","lat","lng","defaultZoom","PlaceMarker_PlaceMarker","location","latitude","longitude","idObject","place_id","alreadyVoted","setVoteTo","autocompleteDropdownStyle","borderRadius","boxShadow","padding","fontSize","position","overflow","maxHeight","z-index","InviteUserInput","doesNameContainInput","input","toLowerCase","indexOf","Autocomplete_default","getItemValue","item","items","invitableUsers","renderItem","isHighlighted","invites","invite","invitingUserText","changeInvitingUserText","onSelect","inviteUser","shouldItemRender","user","menuStyle","invitee_user_id","filter","UserDisplay","votedOnMousedOver","online","EventMembersList","usersWhoVotedForMousedOver","mousedOverSuggestion","vote","UserDisplay_UserDisplay","includes","onlineUsers","mousedOverSuggestionIDPair","suggestion","SuggestPlaceInput","placeSearchTextChanged","autoCompleteBuildupTimer","clearTimeout","setTimeout","requestPlaceAutocompletes","clearPlaceSearchAutocompletes","changePlaceSearchText","placeName","placeSearchAutocompletes","placeSearchText","suggestPlace","placeID","place_name","EventDisplay","dropDownStyle","inviteAcceptedUsers","viewingAsCreator","data","created_by","invitableUsersById","accepted","invitePendingUsers","clickOnEvent","components_EventMembersList","deleteEvent","event_date","eventOwned","components_InviteUserInput","acceptInvitation","components_SuggestPlaceInput","components_PlacesList","components_Chatroom","activeEvent","EventsList","invitesByEvent","placeSuggestionsByEvent","messagesByEvent","sortedEvents","events","event1","event2","components_EventDisplay","LoginArea","loginUsername","changeLoginUsername","loginPassword","changeLoginPassword","login","createNewUser","logout","password","MainView","components_LoginArea","components_NewEventInput","data-tip","components_EventsList","App","components_MainView","Boolean","window","hostname","match","earliestEvent","rootReducer","arguments","_ref","newState","assign","console","log","__webpack_require__","d","__webpack_exports__","url","defaultState","createStore","applyMiddleware","storeAPI","socket","io","function","forEach","on","next","action","emit","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5cdbfadd.chunk.js","sourcesContent":["const today = () => {\n  const date = new Date()\n  date.setHours(0);\n  date.setMinutes(0);\n  date.setSeconds(0);\n  return date;\n}\n\nconst index = (array, key) => {\n  return array.reduce( (object, element) => {\n    object[element[key]] = element\n    return object\n    // eslint-disable-next-line\n  }, new Object)\n}\n\nconst group = (array, key) => {\n  return array.reduce( (object, element) => {\n    // eslint-disable-next-line\n    object[element[key]] = object[element[key]] || new Array\n    object[element[key]].push(element)\n    return object\n    // eslint-disable-next-line\n  }, new Object)\n}\n\nmodule.exports = {today, index, group}","import {store} from \"./index.js\"\nexport const SOCKET_EMIT = 'general:socketEmit'\nexport const CHANGE_LOGIN_USERNAME = 'loginUI:changeLoginUsername'\nexport const CHANGE_LOGIN_PASSWORD = 'loginUI:changeLoginPassword'\nexport const CLEAR_LOGIN_FIELDS = 'loginUI:clearLoginFields'\nexport const LOGGED_OUT = 'auth:loggedOut'\nexport const CHANGE_NEW_EVENT_NAME = 'eventUI:changeNewEventName'\nexport const CHANGE_NEW_EVENT_DATE = 'eventUI:changeNewEventDate'\nexport const NEW_EVENT_CREATED = 'eventUI:newEventCreated'\nexport const CHANGE_INVITING_USER_TEXT = 'inviteUI:changeInvitingUserText'\nexport const CLEAR_INVITING_USER_TEXT = 'inviteUI:clearInvitingUserText'\nexport const CHANGE_PLACE_SEARCH_TEXT = 'suggestUI:changePlaceSearchText'\nexport const CLEAR_PLACE_SEARCH_TEXT = 'suggestUI:clearPlaceSearchText'\nexport const CLEAR_PLACE_SEARCH_AUTOCOMPLETES = 'suggestUI:clearPlaceSearchAutocompletes'\nexport const MOUSE_OVER_PLACE = 'voteUI:mouseOverPlace'\nexport const CLICK_ON_EVENT = 'mainUI:clickOnEvent'\nexport const CHANGE_CURRENTLY_TYPING_MESSAGE = 'messageUI:changeCurrentlyTypingMessage'\nexport const CLEAR_CURRENTLY_TYPING_MESSAGE = 'messageUI:clearCurrentlyTypingMessage'\nexport const CHANGE_CURRENTLY_EDITING_MESSAGE = 'messageUI:changeCurrentlyEditingMessage'\nexport const CHANGE_CURRENTLY_EDITING_MESSAGE_CONTENT = 'messageUI:changeCurrentlyEditingMessageContent'\nexport const CLEAR_CURRENTLY_EDITING_MESSAGE = 'messageUI:clearCurrentlyEditingMessage'\n\nexport function socketEmit(eventType, socketPayload) {\n  return {\n    type: SOCKET_EMIT,\n    payload: {\n      eventType: eventType,\n      socketPayload: socketPayload\n    }\n  }\n}\n\nexport function logout(token, user_id) {\n  store.dispatch({ type: LOGGED_OUT })\n  return socketEmit(\"logout\", {\n    token: token,\n    user_id: user_id\n  })\n}\n\nexport function changeLoginUsername(username) {\n  return {\n    type: CHANGE_LOGIN_USERNAME,\n    payload: {username}\n  }\n}\n\nexport function changeLoginPassword(password) {\n  return {\n    type: CHANGE_LOGIN_PASSWORD,\n    payload: {password}\n  }\n}\n\nexport function login(username, password) {\n  store.dispatch({ type: CLEAR_LOGIN_FIELDS })\n  return socketEmit(\"login\", {\n    username: username,\n    password: password\n  })\n}\n\nexport function createNewUser(username, password) {\n  store.dispatch({ type: CLEAR_LOGIN_FIELDS })\n  return socketEmit(\"signUp\", {\n    username: username,\n    password: password\n  })\n}\n\nexport function changeNewEventName(name) {\n  return {\n    type: CHANGE_NEW_EVENT_NAME,\n    payload: {name}\n  }\n}\n\nexport function changeNewEventDate(date) {\n  return {\n    type: CHANGE_NEW_EVENT_DATE,\n    payload: {date}\n  }\n}\n\nexport function createNewEvent(token, user_id, eventName, eventDate) {\n  store.dispatch({ type: NEW_EVENT_CREATED })\n  return socketEmit(\"createNewEvent\", {\n    token: token,\n    name: eventName,\n    user_id: user_id,\n    date: eventDate\n  })\n}\n\nexport function changeInvitingUserText(text) {\n  return {\n    type: CHANGE_INVITING_USER_TEXT,\n    payload: {text}\n  }\n}\n\nexport function inviteUser(token, user_id, invitee_user_id, event_id) {\n  store.dispatch({ type: CLEAR_INVITING_USER_TEXT })\n  return socketEmit(\"inviteUserToEvent\", {\n    token: token,\n    user_id: user_id,\n    invitee_user_id: invitee_user_id,\n    event_id: event_id\n  })\n}\n\nexport function acceptInvitation(token, user_id, event_id) {\n  return socketEmit(\"acceptInvitation\", {\n    token: token,\n    user_id: user_id,\n    event_id: event_id\n  })\n}\n\nexport function changePlaceSearchText(text) {\n  return {\n    type: CHANGE_PLACE_SEARCH_TEXT,\n    payload: {text}\n  }\n}\n\nexport function requestPlaceAutocompletes(token, user_id, text) {\n  return socketEmit(\"placeTextEntered\", {\n    token: token,\n    user_id: user_id,\n    text: text\n  })\n}\n\nexport function clearPlaceSearchAutocompletes() {\n  return {\n    type: CLEAR_PLACE_SEARCH_AUTOCOMPLETES\n  }\n}\n\nexport function suggestPlace(token, user_id, eventID, placeID, placeName) {\n  store.dispatch({ type: CLEAR_PLACE_SEARCH_TEXT })\n  return socketEmit(\"suggestPlace\", {\n    token: token,\n    user_id: user_id,\n    place_id: placeID,\n    place_name: placeName,\n    event_id: eventID\n  })\n}\n\nexport function mouseOverPlace(idObject) {\n  return {\n    type: MOUSE_OVER_PLACE,\n    payload: {idObject}\n  }\n}\n\nexport function clickOnPlace(token, user_id, place_id, event_id, alreadyVoted) {\n  return socketEmit(\"voteForPlace\", {\n    token: token,\n    user_id: user_id,\n    place_id: place_id,\n    event_id: event_id,\n    setVoteTo: !alreadyVoted\n  })\n}\n\nexport function clickOnEvent(event_id) {\n  store.dispatch({ type: CLEAR_CURRENTLY_TYPING_MESSAGE })\n  store.dispatch({ type: CLEAR_CURRENTLY_EDITING_MESSAGE })\n  return {\n    type: CLICK_ON_EVENT,\n    payload: {event_id}\n  }\n}\n\nexport function changeCurrentlyTypingMessage(text) {\n  return {\n    type: CHANGE_CURRENTLY_TYPING_MESSAGE,\n    payload: {text}\n  }\n}\n\nexport function changeCurrentlyEditingMessage(message_id, existingMessage) {\n  return {\n    type: CHANGE_CURRENTLY_EDITING_MESSAGE,\n    payload: {message_id, existingMessage}\n  }\n}\n\nexport function changeCurrentlyEditingMessageContent(text) {\n  return {\n    type: CHANGE_CURRENTLY_EDITING_MESSAGE_CONTENT,\n    payload: {text}\n  }\n}\n\nexport function sendMessage(token, user_id, event_id, message) {\n  store.dispatch({ type: CLEAR_CURRENTLY_TYPING_MESSAGE })\n  return socketEmit(\"sendMessage\", {\n    token: token,\n    user_id: user_id,\n    event_id: event_id,\n    message: message\n  })\n}\n\nexport function editMessage(token, user_id, message_id, new_message) {\n  store.dispatch({ type: CLEAR_CURRENTLY_EDITING_MESSAGE })\n  return socketEmit(\"editMessage\", {\n    token: token,\n    user_id: user_id,\n    message_id: message_id,\n    new_message: new_message\n  })\n}\n\nexport function deleteMessage(token, user_id, message_id) {\n  return socketEmit(\"deleteMessage\", {\n    token: token,\n    user_id: user_id,\n    message_id: message_id\n  })\n}\n\nexport function deleteEvent(token, user_id, event_id) {\n  return socketEmit(\"removeEvent\", {\n    token: token,\n    user_id: user_id,\n    event_id: event_id\n  })\n}","import React, { Component } from 'react';\nimport DateTimePicker from 'react-datetime-picker';\nimport {connect} from 'react-redux'\nimport { createNewEvent, changeNewEventName, changeNewEventDate } from '../actions';\n\nclass NewEventInput extends Component {\n  render() {\n    return (\n      <div className=\"new-event-input\">\n        <div>\n          <input type=\"text\" placeholder=\"Event Name\" value={this.props.newEventName} onChange={event => this.props.changeNewEventName(event.target.value)}/>\n          <DateTimePicker value={this.props.newEventDate} onChange={this.props.changeNewEventDate}/>\n        </div>\n        <button onClick={this.createNewEvent}>Create New Event</button>\n      </div>\n    )\n  }\n\n  createNewEvent = () => {\n    this.props.createNewEvent(this.props.loggedInAs.token, this.props.loggedInAs.id, this.props.newEventName, this.props.newEventDate.getTime())\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    loggedInAs: state.loggedInAs,\n    newEventName: state.newEventName,\n    newEventDate: state.newEventDate\n  }\n}\n\nconst mapActionsToProps = {\n  changeNewEventName: changeNewEventName,\n  changeNewEventDate: changeNewEventDate,\n  createNewEvent: createNewEvent,\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(NewEventInput);","import React, { PureComponent } from 'react';\nimport {connect} from 'react-redux'\nimport { changeCurrentlyEditingMessage, changeCurrentlyEditingMessageContent, editMessage, deleteMessage } from '../actions';\n\nclass Message extends PureComponent {\n  render() {\n    return (\n      <div className=\"event-display-messages-message-container\" key={this.props.message.id}>\n        <div className=\"event-display-messages-message-upper\">\n          {this.viewingAsMessageAuthor() && !this.props.editing ? (\n            <div className=\"event-display-messages-message-editdelete-buttons\">\n              <div className=\"event-display-messages-message-edit-button\" onClick={() => this.props.changeCurrentlyEditingMessage(this.props.message.id, this.props.message.message_body)}>Edit</div>\n              <div className=\"event-display-messages-message-delete-button\" onClick={() => this.deleteMessage(this.props.message.id)}>Delete</div>\n            </div>\n          ) : null}\n          <div className=\"event-display-messages-message-timestamps\">\n            <div className=\"event-display-messages-message-timestamp basic-timestamp\">{new Date(this.props.message.created_on).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</div>\n            <div className=\"event-display-messages-message-timestamp full-timestamp\">{new Date(this.props.message.created_on).toLocaleString()}</div>\n          </div>\n        </div>\n        {this.props.editing ? (\n          <div>\n            <input type=\"text\" placeholder=\"Message\" value={this.props.currentlyEditingMessageContent} onChange={(event) => this.props.changeCurrentlyEditingMessageContent(event.target.value)}/>\n            <span><button onClick={this.editMessage}>Edit</button></span>\n          </div>\n        ) : (\n          <div className=\"event-display-messages-message\">\n            <div className=\"event-display-messages-message-username\">{this.props.username}: </div>\n            <div className=\"event-display-messages-message-text\">{this.props.message.message_body}</div>\n          </div>\n        )}\n      </div>\n    )\n  }\n\n  editMessage = () => {\n    this.props.editMessage(this.props.loggedInAs.token, this.props.loggedInAs.id, this.props.message.id, this.props.currentlyEditingMessageContent)\n  }\n\n  deleteMessage = () => {\n    this.props.deleteMessage(this.props.loggedInAs.token, this.props.loggedInAs.id, this.props.message.id)\n  }\n\n  viewingAsMessageAuthor = () => {\n    return this.props.loggedInAs && this.props.loggedInAs.id === this.props.message.user_id\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    loggedInAs: state.loggedInAs,\n    editing: state.currentlyEditingMessage === props.message.id,\n    currentlyEditingMessageContent: state.currentlyEditingMessageContent\n  }\n}\n\nconst mapActionsToProps = {\n  changeCurrentlyEditingMessage: changeCurrentlyEditingMessage,\n  changeCurrentlyEditingMessageContent: changeCurrentlyEditingMessageContent,\n  editMessage: editMessage,\n  deleteMessage: deleteMessage\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(Message);","import React, { Component } from 'react';\nimport anime from 'animejs'\nimport Message from './Message';\nimport {connect} from 'react-redux'\nimport { changeCurrentlyTypingMessage, sendMessage } from '../actions';\n\nclass Chatroom extends Component {\n  componentDidUpdate(prevProps) {\n    if (prevProps.messages.length !== this.props.messages.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    const sortedMessages = this.props.messages.sort((message1, message2) => new Date(message1.created_on).getTime() - new Date(message2.created_on).getTime())\n    return (\n      <div className=\"event-display-messages\">\n        <div className=\"event-display-messages-header\">Chat</div>\n        <div className={\"event-display-messages-list event-id-\" + this.props.eventID} ref=\"messageList\">\n          {sortedMessages.map(message => {\n            return <Message message={message} username={this.props.users[message.user_id].name} key={message.id}/>\n          })}\n        </div>\n        {this.props.active && this.props.viewingAsMember ? (\n          <div className=\"event-display-messages-text-entry\">\n            <form>\n              <input type=\"text\" placeholder=\"Message\" value={this.props.currentlyTypingMessage} onChange={(event) => this.props.changeCurrentlyTypingMessage(event.target.value)}/>\n              <div><button onClick={this.sendMessage}>Send</button></div>\n            </form>\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n\n  sendMessage = (event) => {\n    event.preventDefault()\n    this.props.sendMessage(this.props.loggedInAs.token, this.props.loggedInAs.id, this.props.eventID, this.props.currentlyTypingMessage)\n  }\n\n  scrollToBottom = () => {\n    const { messageList } = this.refs;\n    const scrollHeight = messageList.scrollHeight;\n    const height = messageList.clientHeight;\n    const maxScrollTop = scrollHeight - height;\n    anime({\n      targets: '.event-display-messages-list.event-id-' + this.props.eventID,\n      easing: 'easeOutQuart',\n      direction: 'normal',\n      duration: 350,\n      autoplay: false,\n      scrollTop: maxScrollTop > 0 ? maxScrollTop : 0\n    }).restart()\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    loggedInAs: state.loggedInAs,\n    currentlyTypingMessage: state.currentlyTypingMessage\n  }\n}\n\nconst mapActionsToProps = {\n  changeCurrentlyTypingMessage: changeCurrentlyTypingMessage,\n  sendMessage: sendMessage\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(Chatroom);","import React, { Component } from 'react';\nimport anime from 'animejs'\n\nexport default class VoteCount extends Component {\n  componentDidMount = () => {\n    this.positiveAnimation = anime({\n      targets: '.vote-count.' + this.props.id,\n      color: \"#ffffff\",\n      easing: 'easeOutQuart',\n      direction: 'alternate',\n      duration: 350,\n      background: \"#00B258\"\n    });\n    this.negativeAnimation = anime({\n      targets: '.vote-count.' + this.props.id,\n      color: \"#ffffff\",\n      easing: 'easeOutQuart',\n      direction: 'alternate',\n      duration: 350,\n      background: \"#B30300\"\n    });\n  }\n  \n  componentDidUpdate = (prevProps) => {\n    if (prevProps.votes < this.props.votes) {\n      this.positiveAnimation.restart()\n    } else if (prevProps.votes > this.props.votes) {\n      this.negativeAnimation.restart()\n    }\n  }\n\n  render() {\n    return <div className={\"vote-count \" + this.props.id}>{this.props.votes}</div>\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class PlaceMarker extends Component {\n  render() {\n    return (\n      <div className={\"place-map-marker\" + (this.props.$hover ? \" map-marker-hovered\" : \"\")}>\n        {this.props.$hover ? this.props.place.placeData.name : null}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport VoteCount from './VoteCount.js';\nimport FlipMove from 'react-flip-move';\nimport GoogleMapReact from 'google-map-react';\nimport PlaceMarker from './PlaceMarker';\nimport {connect} from 'react-redux'\nimport { mouseOverPlace, clickOnPlace } from '../actions.js';\n\nclass PlacesList extends Component {\n  render() {\n    const latitude = 29.747055\n    const longitude = -95.372617\n    const sortedPlaces = this.props.placeSuggestions.sort((place1, place2) => place2.votes.length - place1.votes.length)\n    return (\n      <div>\n        <div className=\"event-display-place-list\">\n          <FlipMove>\n            {sortedPlaces.map(place => {\n              const votedFor = this.votedFor(place)\n              const entryClassName = \"event-display-place-list-entry\" + (votedFor ? \" voted-for\" : \"\")\n              const id = `${place.google_place_id}${this.props.eventID}`\n              return (\n                <div className=\"event-display-place-list-entry-container\"\n                    key={id}\n                    onMouseOver={() => this.props.mouseOverPlace({event_id: this.props.eventID, google_place_id: place.google_place_id})}\n                    onMouseOut={() => this.props.mouseOverPlace(null)}>\n                  <VoteCount votes={place.votes.length} id={id}/>\n                  {this.props.viewingAsMember ? (\n                    <div className={`${entryClassName} clickable`}\n                        onClick={() => this.props.clickOnPlace(this.props.loggedInAs.token, this.props.loggedInAs.id, place.google_place_id, this.props.eventID, votedFor)}>\n                      {place.placeData.name} \n                    </div>\n                  ) : (\n                    <div className={`${entryClassName}`}>\n                      {place.placeData.name} \n                    </div>\n                  )}\n                </div>\n              )\n            })}\n          </FlipMove>\n        </div>\n        <div className=\"map-wrapper\" style={{ height: '300px', width: '300px' }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY }}\n            defaultCenter={{\n              lat: latitude,\n              lng: longitude\n            }}\n            defaultZoom={11}\n          >\n            {this.props.placeSuggestions.map(place => <PlaceMarker lat={place.placeData.location.latitude} lng={place.placeData.location.longitude} place={place} key={place.google_place_id}/>)}\n          </GoogleMapReact>\n        </div>\n      </div>\n    )\n  }\n\n  votedFor = (place) => {\n    return this.props.loggedInAs && place.votes.find(place => place.user_id === this.props.loggedInAs.id) !== undefined\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    loggedInAs: state.loggedInAs\n  }\n}\n\nconst mapActionsToProps = {\n  mouseOverPlace: mouseOverPlace,\n  clickOnPlace: clickOnPlace\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(PlacesList);","export const autocompleteDropdownStyle = {\n    borderRadius: '3px',\n    boxShadow: '0 2px 12px rgba(0, 0, 0, 0.1)',\n    background: 'rgba(255, 255, 255, 0.9)',\n    padding: '2px 0',\n    fontSize: '90%',\n    position: 'fixed',\n    overflow: 'auto',\n    maxHeight: '50%',\n    \"z-index\": \"1\"\n  }","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport Autocomplete from 'react-autocomplete'\nimport { changeInvitingUserText, inviteUser } from '../actions';\nimport { autocompleteDropdownStyle } from './autocompleteStyle';\n\nclass InviteUserInput extends Component {\n  render() {\n    return (\n      <div className=\"invite-user-field\">\n        <div className=\"invite-user-label\">Invite to Event</div>\n        <Autocomplete\n          getItemValue={(item) => item.name}\n          items={this.props.invitableUsers}\n          renderItem={(item, isHighlighted) =>\n            <div style={{\n              background: isHighlighted ? 'lightgray' : 'white',\n              color: this.props.invites.find(invite => invite.user_id === item.id) !== undefined ? '#67960f80' : 'black'\n            }}>\n              {item.name}\n            </div>\n          }\n          value={this.props.invitingUserText}\n          onChange={(event) => this.props.changeInvitingUserText(event.target.value)}\n          onSelect={(value, item) => this.props.inviteUser(this.props.loggedInAs.token, this.props.loggedInAs.id, item.id, this.props.eventID)}\n          shouldItemRender={(user, input) => this.doesNameContainInput(user.name, input)}\n          menuStyle={autocompleteDropdownStyle}\n        />\n      </div>\n    )\n  }\n\n  doesNameContainInput = (name, input) => {\n    return name.toLowerCase().indexOf(input.toLowerCase()) !== -1\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    loggedInAs: state.loggedInAs,\n    invitingUserText: state.invitingUserText,\n    invitableUsers: state.users.filter(user => !state.loggedInAs || user.id !== state.loggedInAs.id)\n  }\n}\n\nconst mapActionsToProps = {\n  changeInvitingUserText: changeInvitingUserText,\n  inviteUser: inviteUser\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(InviteUserInput);","import React, { Component } from 'react';\n\nexport default class UserDisplay extends Component {\n  render() {\n    return (\n      <div className=\"user-display\">\n        <span className={\"user-display-name\" + (this.props.votedOnMousedOver ? \" voted-user\" : \"\")}>{this.props.name}</span>\n        {this.props.online ? <div className=\"online-indicator\"></div> : null}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport UserDisplay from './UserDisplay';\n\nclass EventMembersList extends Component {\n  render() {\n    const usersWhoVotedForMousedOver = (this.props.mousedOverSuggestion && this.props.mousedOverSuggestion.votes.map(vote => vote.user_id)) || []\n    return (\n      <div className=\"invited-users-list\">\n        <div>Users going:</div>\n        {this.props.users.map(user => <UserDisplay key={user.id} votedOnMousedOver={usersWhoVotedForMousedOver.includes(user.id)} name={user.name} online={this.props.onlineUsers.includes(user.id)}/> )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  const mousedOverSuggestion = state.mousedOverSuggestionIDPair && props.placeSuggestions.find(suggestion =>\n    suggestion.event_id === state.mousedOverSuggestionIDPair.event_id &&\n    suggestion.google_place_id === state.mousedOverSuggestionIDPair.google_place_id)\n  return {\n    mousedOverSuggestion: mousedOverSuggestion,\n    onlineUsers: state.onlineUsers\n  }\n}\n\nexport default connect(mapStateToProps)(EventMembersList);","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport Autocomplete from 'react-autocomplete'\nimport { autocompleteDropdownStyle } from './autocompleteStyle';\nimport { suggestPlace, changePlaceSearchText, clearPlaceSearchAutocompletes, requestPlaceAutocompletes } from '../actions';\n\nclass SuggestPlaceInput extends Component {\n  render() {\n    return (\n      <div className=\"event-display-place-suggestion\">\n        <div className=\"invite-user-label\">Suggest a Place</div>\n        <Autocomplete\n          getItemValue={(item) => item.placeName}\n          items={this.props.placeSearchAutocompletes}\n          renderItem={(item, isHighlighted) =>\n            <div style={{background: isHighlighted ? 'lightgray' : 'white'}}>\n              {item.placeName}\n            </div>\n          }\n          value={this.props.placeSearchText}\n          onChange={(event) => this.placeSearchTextChanged(event.target.value)}\n          onSelect={(value, item) => this.props.suggestPlace(this.props.loggedInAs.token, this.props.loggedInAs.id, this.props.eventID, item.placeID, item.placeName)}\n          shouldItemRender={() => true}\n          menuStyle={autocompleteDropdownStyle}\n        />\n      </div>\n    )\n  }\n\n  placeSearchTextChanged = (text) => {\n    const autoCompleteBuildupTime = 250 //ms\n\n    if (this.autoCompleteBuildupTimer !== null) {\n      clearTimeout(this.autoCompleteBuildupTimer)\n      this.autoCompleteBuildupTimer = null\n    }\n    if (text !== \"\") {\n      this.autoCompleteBuildupTimer = setTimeout(() => {\n        this.props.requestPlaceAutocompletes(this.props.loggedInAs.token, this.props.loggedInAs.id, text)\n        this.autoCompleteBuildupTimer = null\n      }, autoCompleteBuildupTime)\n    } else {\n      this.props.clearPlaceSearchAutocompletes()\n    }\n\n    this.props.changePlaceSearchText(text)\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    loggedInAs: state.loggedInAs,\n    placeSearchAutocompletes: state.placeSearchAutocompletes,\n    placeSearchText: state.placeSearchText\n  }\n}\n\nconst mapActionsToProps = {\n  changePlaceSearchText: changePlaceSearchText,\n  requestPlaceAutocompletes: requestPlaceAutocompletes,\n  suggestPlace: suggestPlace,\n  clearPlaceSearchAutocompletes: clearPlaceSearchAutocompletes\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(SuggestPlaceInput);","import React, { Component } from 'react';\nimport {index} from \"../utility.js\"\nimport Chatroom from './Chatroom.js';\nimport PlacesList from './PlacesList.js';\nimport InviteUserInput from './InviteUserInput.js';\nimport EventMembersList from './EventMembersList.js';\nimport {connect} from 'react-redux'\nimport { acceptInvitation, clickOnEvent, deleteEvent } from '../actions.js';\nimport SuggestPlaceInput from './SuggestPlaceInput.js';\n\nclass EventDisplay extends Component {\n  dropDownStyle = {\n    borderRadius: '3px',\n    boxShadow: '0 2px 12px rgba(0, 0, 0, 0.1)',\n    background: 'rgba(255, 255, 255, 0.9)',\n    padding: '2px 0',\n    fontSize: '90%',\n    position: 'fixed',\n    overflow: 'auto',\n    maxHeight: '50%',\n    \"z-index\": \"1\"\n  }\n  \n  render() {\n    const invitableUsersById = index(this.props.invitableUsers, \"id\")\n\n    let inviteAcceptedUsers = this.props.invites.filter(invite => invite.accepted)\n    // also display event owner as a member of event\n    inviteAcceptedUsers.push({user_id: this.props.data.created_by})\n    inviteAcceptedUsers = inviteAcceptedUsers.map(invite => invitableUsersById[invite.user_id])\n\n    const invitePendingUsers = this.props.invites.filter(invite => !invite.accepted).map(invite => invitableUsersById[invite.user_id])\n    const viewingAsMember = this.viewingAsMember(inviteAcceptedUsers)\n    return (\n      <div className={\"event-display\" + (this.props.active ? \" active-event\" : \" inactive-event\")} onClick={() => {if (!this.props.active) {this.props.clickOnEvent(this.props.data.id)}}}>\n        <div className=\"event-display-left-column\">\n          <div className=\"event-display-main\">\n            <div className=\"event-display-members\">\n              <EventMembersList users={inviteAcceptedUsers} placeSuggestions={this.props.placeSuggestions}/>\n            </div>\n            <div className=\"event-display-title\">\n              <span className=\"event-name\">\n                {this.props.data.name}\n                {this.viewingAsCreator() ? <span className=\"delete-event-button\" onClick={() => this.props.deleteEvent(this.props.loggedInAs.token, this.props.loggedInAs.id, this.props.data.id)}> (Delete)</span> : null}\n              </span>\n              <span className=\"event-date\">{new Date(this.props.data.event_date).toLocaleString()}</span>\n              {this.props.eventOwned && this.props.active ? <InviteUserInput invites={this.props.invites} eventID={this.props.data.id}/> : null}\n            </div>\n            <div className=\"event-display-members\">\n              <div className=\"invited-users-list\">\n                <div>Users already invited:</div>\n                {invitePendingUsers.map(user => <div key={user.id}>{user.name}</div> )}\n              </div>\n              {this.props.loggedInAs && invitePendingUsers.find(invite => {\n                return invite.id === this.props.loggedInAs.id\n                }) !== undefined ? (\n                <div className=\"join-event\">\n                  <button className=\"join-event-button\" onClick={() => this.props.acceptInvitation(this.props.loggedInAs.token, this.props.loggedInAs.id, this.props.data.id)}>Join Event</button>\n                </div>\n              ) : null}\n            </div>\n          </div>\n          {this.props.active ? (\n            <div>\n              {viewingAsMember ? <SuggestPlaceInput eventID={this.props.data.id}/> : null}\n              <PlacesList placeSuggestions={this.props.placeSuggestions}\n                          eventID={this.props.data.id}\n                          viewingAsMember={viewingAsMember}\n                          />\n            </div>\n          ) : null}\n        </div>\n        <div className=\"event-display-right-column\">\n          <Chatroom\n            eventID={this.props.data.id}\n            messages={this.props.messages}\n            users={index(inviteAcceptedUsers, \"id\")}\n            viewingAsMember={viewingAsMember}\n            active={this.props.active}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  viewingAsMember = (inviteAcceptedUsers) => {\n    return this.props.loggedInAs && (inviteAcceptedUsers.find(invite => \n      invite.id === this.props.loggedInAs.id\n    ) !== undefined)\n  }\n\n  viewingAsCreator = () => {\n    return this.props.loggedInAs && this.props.loggedInAs.id === this.props.data.created_by\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    invitableUsers: state.users,\n    loggedInAs: state.loggedInAs,\n    eventOwned: state.loggedInAs && state.loggedInAs.id === props.data.created_by,\n    active: state.activeEvent === props.data.id\n  }\n}\n\nconst mapActionsToProps = {\n  acceptInvitation: acceptInvitation,\n  clickOnEvent: clickOnEvent,\n  deleteEvent: deleteEvent\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(EventDisplay);","import React, { Component } from 'react';\nimport EventDisplay from './EventDisplay';\nimport {group} from '../utility.js'\nimport {connect} from 'react-redux'\n\nclass EventsList extends Component {\n  render() {\n    const invitesByEvent = group(this.props.invites, \"event_id\")\n    const placeSuggestionsByEvent = group(this.props.placeSuggestions, \"event_id\")\n    const messagesByEvent = group(this.props.messages, \"event_id\")\n    const sortedEvents = this.props.events.sort((event1, event2) => new Date(event1.event_date).getTime() - new Date(event2.event_date).getTime())\n    return (\n      <div className=\"events-list\">\n        {sortedEvents.map(event => <EventDisplay data={event}\n                                                  key={event.id}\n                                                  invites={invitesByEvent[event.id] || []}\n                                                  placeSuggestions={placeSuggestionsByEvent[event.id] || []}\n                                                  messages={messagesByEvent[event.id] || []}\n                                                  />)}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    events: state.events,\n    activeEvent: state.activeEvent,\n    invites: state.invites,\n    placeSuggestions: state.placeSuggestions,\n    messages: state.messages\n  }\n}\n\nexport default connect(mapStateToProps)(EventsList);","import React, { Component } from 'react';\nimport { login, changeLoginUsername, changeLoginPassword, createNewUser, logout } from '../actions';\nimport {connect} from 'react-redux'\n\nclass LoginArea extends Component {\n  render() {\n    return this.props.loggedInAs === null ? (\n      <div className=\"login-area\">\n        <form>\n          <input type=\"text\" placeholder=\"Username\" value={this.props.loginUsername} onChange={event => this.props.changeLoginUsername(event.target.value)}/>\n          <input type=\"password\" placeholder=\"Password\" value={this.props.loginPassword} onChange={event => this.props.changeLoginPassword(event.target.value)}/>\n          <div>\n            <div><button onClick={event => {event.preventDefault(); this.props.login(this.props.loginUsername, this.props.loginPassword)}}>Login</button></div>\n            <div><button onClick={event => {event.preventDefault(); this.props.createNewUser(this.props.loginUsername, this.props.loginPassword)}}>Sign Up</button></div>\n          </div>\n        </form>\n      </div>\n    ) : (\n      <div className=\"login-area\">\n        <div className=\"logged-in-text\">Logged in as {this.props.loggedInAs.name}</div>\n        <div><button onClick={() => this.props.logout(this.props.loggedInAs.token, this.props.loggedInAs.id)}>Logout</button></div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    loggedInAs: state.loggedInAs,\n    loginUsername: state.loginUsername,\n    loginPassword: state.loginPassword\n  }\n}\n\nconst mapActionsToProps = {\n  login: login,\n  createNewUser: createNewUser,\n  logout: logout,\n  changeLoginUsername: changeLoginUsername,\n  changeLoginPassword: changeLoginPassword\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(LoginArea);","import React, { Component } from 'react';\nimport NewEventInput from './NewEventInput';\nimport EventsList from './EventsList';\nimport './styles.css';\nimport LoginArea from './LoginArea';\nimport {connect} from 'react-redux'\n\nclass MainView extends Component {\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main-view\">\n          <div className=\"login-and-events-wrapper\">\n            <h2>Events!</h2>\n            <div className=\"top-bar\">\n              <div className=\"login-wrapper\">\n                <LoginArea/>\n              </div>\n              {this.props.loggedInAs !== null ? <NewEventInput/> : null}\n            </div>\n            <div className=\"events-list-wrapper\" data-tip=\"whee\">\n              <EventsList/>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    loggedInAs: state.loggedInAs\n  }\n}\n\nexport default connect(mapStateToProps)(MainView);","import React, { Component } from 'react';\nimport './App.css';\nimport MainView from './components/MainView';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MainView/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { NEW_EVENT_CREATED, CHANGE_LOGIN_USERNAME, CHANGE_LOGIN_PASSWORD, CLEAR_LOGIN_FIELDS, LOGGED_OUT, CHANGE_NEW_EVENT_NAME, CHANGE_NEW_EVENT_DATE, CHANGE_INVITING_USER_TEXT, CLEAR_INVITING_USER_TEXT, CHANGE_PLACE_SEARCH_TEXT, CLEAR_PLACE_SEARCH_TEXT, CLEAR_PLACE_SEARCH_AUTOCOMPLETES, MOUSE_OVER_PLACE, CLICK_ON_EVENT, CLEAR_CURRENTLY_TYPING_MESSAGE, CHANGE_CURRENTLY_TYPING_MESSAGE, CHANGE_CURRENTLY_EDITING_MESSAGE, CHANGE_CURRENTLY_EDITING_MESSAGE_CONTENT, CLEAR_CURRENTLY_EDITING_MESSAGE } from './actions';\nimport {today} from './utility.js'\n\nconst rootReducer = (state = {}, {type, payload}) => {\n  let newState = Object.assign({}, state)\n  switch (type) {\n    // messages from socket\n    case \"setInitialData\":\n      newState = Object.assign(newState, payload)\n      newState.activeEvent = newState.events.length > 0 ? earliestEvent(newState.events).id : null\n      // const {events, users, invites, placeSuggestions, messages, onlineUsers} = payload\n      return newState\n    case \"updateEventList\":\n      newState.events = payload\n      newState.activeEvent = newState.activeEvent === null && newState.events.length > 0 ? earliestEvent(newState.events).id : newState.activeEvent\n      return newState\n    case \"updateInvitableUsersList\":\n      newState.users = payload\n      return newState\n    case \"loginSuccess\":\n      newState.loggedInAs = payload.user\n      return newState\n    case \"updateInvitesList\":\n      newState.invites = payload\n      return newState\n    case \"setPlaceSearchAutocompletes\":\n      console.log(payload)\n      newState.placeSearchAutocompletes = payload\n      return newState\n    case \"updatePlaceSuggestions\":\n      newState.placeSuggestions = payload\n      return newState\n    case \"updateMessages\":\n      newState.messages = payload\n      return newState\n    case \"updateOnlineUsers\":\n      newState.onlineUsers = payload\n      return newState\n\n    // -- frontend-limited effects\n    // general\n    case CLICK_ON_EVENT:\n      newState.activeEvent = payload.event_id\n      return newState\n\n    // login/out\n    case CHANGE_LOGIN_USERNAME:\n      newState.loginUsername = payload.username\n      return newState\n    case CHANGE_LOGIN_PASSWORD:\n      newState.loginPassword = payload.password\n      return newState\n    case CLEAR_LOGIN_FIELDS:\n      newState.loginUsername = \"\"\n      newState.loginPassword = \"\"\n      return newState\n    case LOGGED_OUT:\n      newState.loggedInAs = null\n      return newState\n    \n    // event creation\n    case CHANGE_NEW_EVENT_NAME:\n      newState.newEventName = payload.name\n      return newState\n    case CHANGE_NEW_EVENT_DATE:\n      newState.newEventDate = payload.date\n      return newState\n    case NEW_EVENT_CREATED:\n      newState.newEventName = \"\"\n      newState.newEventDate = today()\n      return newState\n    \n    // inviting users to events\n    case CHANGE_INVITING_USER_TEXT:\n      newState.invitingUserText = payload.text\n      return newState\n    case CLEAR_INVITING_USER_TEXT:\n      newState.invitingUserText = \"\"\n      return newState\n    \n    // suggesting places\n    case CHANGE_PLACE_SEARCH_TEXT:\n      newState.placeSearchText = payload.text\n      return newState\n    case CLEAR_PLACE_SEARCH_TEXT:\n      newState.placeSearchText = \"\"\n      return newState\n    case CLEAR_PLACE_SEARCH_AUTOCOMPLETES:\n      newState.placeSearchAutocompletes = []\n      return newState\n\n    // voting on places\n    case MOUSE_OVER_PLACE:\n      newState.mousedOverSuggestionIDPair = payload.idObject\n      return newState\n    \n    // chat\n    case CHANGE_CURRENTLY_TYPING_MESSAGE:\n      newState.currentlyTypingMessage = payload.text\n      return newState\n    case CLEAR_CURRENTLY_TYPING_MESSAGE:\n      newState.currentlyTypingMessage = \"\"\n      return newState\n    case CHANGE_CURRENTLY_EDITING_MESSAGE:\n      newState.currentlyEditingMessage = payload.message_id\n      newState.currentlyEditingMessageContent = payload.existingMessage\n      return newState\n    case CHANGE_CURRENTLY_EDITING_MESSAGE_CONTENT:\n      newState.currentlyEditingMessageContent = payload.text\n      return newState\n    case CLEAR_CURRENTLY_EDITING_MESSAGE:\n      newState.currentlyEditingMessage = null\n      newState.currentlyEditingMessageContent = \"\"\n      return newState\n\n    default:\n      return state\n  }\n}\n\nconst earliestEvent = (events) => {\n  return events.sort((event1, event2) => new Date(event1.event_date).getTime() - new Date(event2.event_date).getTime())[0]\n}\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport {createMySocketMiddleware} from './socketMiddleware.js'\nimport {Provider} from 'react-redux'\nimport rootReducer from './reducer.js'\nimport {today} from './utility.js'\n\nconst defaultState = {\n  events: [],\n  newEventName: \"\",\n  newEventDate: today(),\n  loginUsername: \"\",\n  loginPassword: \"\",\n  loggedInAs: null,\n  invitableUsers: [],\n  invitingUserText: \"\",\n  invites: [],\n  placeSearchText: \"\",\n  placeSearchAutocompletes: [],\n  placeSuggestions: [],\n  mousedOverSuggestionIDPair: null,\n  messages: [],\n  currentlyTypingMessage: \"\",\n  currentlyEditingMessage: null,\n  currentlyEditingMessageContent: \"\",\n  onlineUsers: [],\n  activeEvent: null\n}\n\nexport const store = createStore(rootReducer, defaultState, applyMiddleware(createMySocketMiddleware()))\n// export const store = createStore(rootReducer, defaultState, applyMiddleware(createMySocketMiddleware(\"http://localhost:3000\")))\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import io from 'socket.io-client';\nimport { SOCKET_EMIT } from './actions';\n\nexport const createMySocketMiddleware = (url) => {\n  return storeAPI => {\n      const socket = io.connect(url);\n\n      const events = [\n        {name: \"initialData\", function: \"setInitialData\"},\n        {name: \"eventList\", function: \"updateEventList\"},\n        {name: \"invitableUsersList\", function: \"updateInvitableUsersList\"},\n        {name: \"loggedIn\", function: \"loginSuccess\"},\n        {name: \"invitesList\", function: \"updateInvitesList\"},\n        {name: \"placeNameMatches\", function: \"setPlaceSearchAutocompletes\"},\n        {name: \"placeSuggestions\", function: \"updatePlaceSuggestions\"},\n        {name: \"messages\", function: \"updateMessages\"},\n        {name: \"onlineUsers\", function: \"updateOnlineUsers\"},\n      ]\n\n      events.forEach(event => {\n        socket.on(event.name, socketPayload => {\n          storeAPI.dispatch({\n            type : event.function,\n            payload : socketPayload\n          });\n        })\n      })\n\n      return next => action => {\n        if (action.type === SOCKET_EMIT) {\n            socket.emit(action.payload.eventType, action.payload.socketPayload);\n            return;\n        }\n        return next(action);\n      }\n  }\n}"],"sourceRoot":""}